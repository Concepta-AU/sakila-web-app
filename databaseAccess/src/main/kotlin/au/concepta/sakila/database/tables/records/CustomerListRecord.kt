/*
 * This file is generated by jOOQ.
 */
package au.concepta.sakila.database.tables.records


import au.concepta.sakila.database.tables.CustomerList

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class CustomerListRecord() : TableRecordImpl<CustomerListRecord>(CustomerList.CUSTOMER_LIST) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var address: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var zipCode: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var phone: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var city: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var country: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var notes: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var sid: Int?
        set(value): Unit = set(8, value)
        get(): Int? = get(8) as Int?

    /**
     * Create a detached, initialised CustomerListRecord
     */
    constructor(id: Int? = null, name: String? = null, address: String? = null, zipCode: String? = null, phone: String? = null, city: String? = null, country: String? = null, notes: String? = null, sid: Int? = null): this() {
        this.id = id
        this.name = name
        this.address = address
        this.zipCode = zipCode
        this.phone = phone
        this.city = city
        this.country = country
        this.notes = notes
        this.sid = sid
        resetTouchedOnNotNull()
    }
}
