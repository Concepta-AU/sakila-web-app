/*
 * This file is generated by jOOQ.
 */
package au.concepta.sakila.database.tables.records


import au.concepta.sakila.database.tables.Actor

import java.time.OffsetDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class ActorRecord() : UpdatableRecordImpl<ActorRecord>(Actor.ACTOR) {

    open var actorId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var firstName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var lastName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var lastUpdate: OffsetDateTime?
        set(value): Unit = set(3, value)
        get(): OffsetDateTime? = get(3) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised ActorRecord
     */
    constructor(actorId: Int? = null, firstName: String? = null, lastName: String? = null, lastUpdate: OffsetDateTime? = null): this() {
        this.actorId = actorId
        this.firstName = firstName
        this.lastName = lastName
        this.lastUpdate = lastUpdate
        resetTouchedOnNotNull()
    }
}
