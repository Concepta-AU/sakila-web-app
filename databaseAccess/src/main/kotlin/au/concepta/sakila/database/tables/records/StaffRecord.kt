/*
 * This file is generated by jOOQ.
 */
package au.concepta.sakila.database.tables.records


import au.concepta.sakila.database.tables.Staff

import java.time.OffsetDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class StaffRecord() : UpdatableRecordImpl<StaffRecord>(Staff.STAFF) {

    open var staffId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var firstName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var lastName: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var addressId: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var email: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var storeId: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var active: Boolean?
        set(value): Unit = set(6, value)
        get(): Boolean? = get(6) as Boolean?

    open var username: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var password: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var lastUpdate: OffsetDateTime?
        set(value): Unit = set(9, value)
        get(): OffsetDateTime? = get(9) as OffsetDateTime?

    open var picture: ByteArray?
        set(value): Unit = set(10, value)
        get(): ByteArray? = get(10) as ByteArray?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised StaffRecord
     */
    constructor(staffId: Int? = null, firstName: String? = null, lastName: String? = null, addressId: Int? = null, email: String? = null, storeId: Int? = null, active: Boolean? = null, username: String? = null, password: String? = null, lastUpdate: OffsetDateTime? = null, picture: ByteArray? = null): this() {
        this.staffId = staffId
        this.firstName = firstName
        this.lastName = lastName
        this.addressId = addressId
        this.email = email
        this.storeId = storeId
        this.active = active
        this.username = username
        this.password = password
        this.lastUpdate = lastUpdate
        this.picture = picture
        resetTouchedOnNotNull()
    }
}
