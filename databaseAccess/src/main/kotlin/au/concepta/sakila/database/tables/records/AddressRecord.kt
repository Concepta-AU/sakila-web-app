/*
 * This file is generated by jOOQ.
 */
package au.concepta.sakila.database.tables.records


import au.concepta.sakila.database.tables.Address

import java.time.OffsetDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class AddressRecord() : UpdatableRecordImpl<AddressRecord>(Address.ADDRESS) {

    open var addressId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var address: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var address2: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var district: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var cityId: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var postalCode: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var phone: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var lastUpdate: OffsetDateTime?
        set(value): Unit = set(7, value)
        get(): OffsetDateTime? = get(7) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised AddressRecord
     */
    constructor(addressId: Int? = null, address: String? = null, address2: String? = null, district: String? = null, cityId: Int? = null, postalCode: String? = null, phone: String? = null, lastUpdate: OffsetDateTime? = null): this() {
        this.addressId = addressId
        this.address = address
        this.address2 = address2
        this.district = district
        this.cityId = cityId
        this.postalCode = postalCode
        this.phone = phone
        this.lastUpdate = lastUpdate
        resetTouchedOnNotNull()
    }
}
