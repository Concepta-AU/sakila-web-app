/*
 * This file is generated by jOOQ.
 */
package au.concepta.sakila.database.routines


import au.concepta.sakila.database.Public

import java.time.LocalDate
import java.time.OffsetDateTime

import org.jooq.Field
import org.jooq.Parameter
import org.jooq.impl.AbstractRoutine
import org.jooq.impl.DSL
import org.jooq.impl.Internal
import org.jooq.impl.SQLDataType


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class LastDay : AbstractRoutine<LocalDate>("last_day", Public.PUBLIC, DSL.comment(""), SQLDataType.LOCALDATE) {
    companion object {

        /**
         * The parameter <code>public.last_day.RETURN_VALUE</code>.
         */
        val RETURN_VALUE: Parameter<LocalDate?> = Internal.createParameter("RETURN_VALUE", SQLDataType.LOCALDATE, false, false)

        /**
         * The parameter <code>public.last_day._1</code>.
         */
        val _1: Parameter<OffsetDateTime?> = Internal.createParameter("_1", SQLDataType.TIMESTAMPWITHTIMEZONE(6), false, true)
    }

    init {
        returnParameter = LastDay.RETURN_VALUE
        addInParameter(LastDay._1)
    }

    /**
     * Set the <code>_1</code> parameter IN value to the routine
     */
    fun set__1(value: OffsetDateTime?): Unit = setValue(LastDay._1, value)

    /**
     * Set the <code>_1</code> parameter to the function to be used with a
     * {@link org.jooq.Select} statement
     */
    fun set__1(field: Field<OffsetDateTime?>): Unit {
        setField(LastDay._1, field)
    }
}
