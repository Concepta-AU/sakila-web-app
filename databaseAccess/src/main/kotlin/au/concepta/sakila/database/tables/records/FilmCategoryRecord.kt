/*
 * This file is generated by jOOQ.
 */
package au.concepta.sakila.database.tables.records


import au.concepta.sakila.database.tables.FilmCategory

import java.time.OffsetDateTime

import org.jooq.Record2
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class FilmCategoryRecord() : UpdatableRecordImpl<FilmCategoryRecord>(FilmCategory.FILM_CATEGORY) {

    open var filmId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var categoryId: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var lastUpdate: OffsetDateTime?
        set(value): Unit = set(2, value)
        get(): OffsetDateTime? = get(2) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<Int?, Int?> = super.key() as Record2<Int?, Int?>

    /**
     * Create a detached, initialised FilmCategoryRecord
     */
    constructor(filmId: Int? = null, categoryId: Int? = null, lastUpdate: OffsetDateTime? = null): this() {
        this.filmId = filmId
        this.categoryId = categoryId
        this.lastUpdate = lastUpdate
        resetTouchedOnNotNull()
    }
}
